{"name":"Jsutils","tagline":"","body":"#JSUtils\r\nSimple js functions for convenience\r\n\r\n## isFunction(),isArray(),isObject(),isString()\r\nReturns true if a given variable matche\r\n\r\n```js\r\n$u.isFunction(function(){});\r\n//true\r\n$u.isFunction('');\r\n//false\r\n\r\n$u.isArray([]);\r\n//true\r\n$u.isArray('');\r\n//false\r\n\r\n$u.isObject({});\r\n//true\r\n$u.isObject('');\r\n//false\r\n\r\n$u.isString('');\r\n//true\r\n$u.isString({});\r\n//false\r\n```\r\n## bind(fn,context,*[arguments])\r\nbind given function to context if given, and pass arguments if given\r\n\r\n```js\r\nvar context = {name : 'test'},\r\n    func = function(arg) { return \"name: \" + (this.name || arg); },\r\n    _func = $u.bind(func, context);\r\n_func();\r\n//name: test\r\n\r\nvar func = function(arg) { return \"name: \" + arg; },\r\n    _func = $u.bind(func, null, 'ling');\r\n_func();\r\n//name: ling\r\n```\r\n## keys(obj)\r\nreturn keys of given object\r\n\r\n```js\r\nvar obj = {name: '1',value: '2', some: '3'};\r\n$u.keys(obj);\r\n//[\"name\", \"value\", \"some\"]\r\n```\r\n## values(obj)\r\nreturn values of given object\r\n\r\n```js\r\nvar obj = {name: '1',value: '2', some: '3'};\r\n$u.values(obj);\r\n//[\"1\", \"2\", \"3\"]\r\n```\r\n## Class.extend\r\nsimple js inheritance \r\n\r\n```js\r\nvar Dog = $u.Class.extend({\r\n  init: function(name){\r\n    this.name = name;\r\n  },\r\n  get_name: function (){\r\n    return this.name;\r\n  }\r\n});\r\n\r\nvar Dog_1 = Dog.extend({\r\n  init: function(name){\r\n    this._super(name);\r\n  }\r\n});\r\n\r\nvar d = new Dog('d');\r\nvar d_1 = new Dog_1('d_1');\r\nd.get_name();\r\n//\"d\"\r\nd_1.get_name();\r\n//\"d_1\"\r\n```\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","google":""}